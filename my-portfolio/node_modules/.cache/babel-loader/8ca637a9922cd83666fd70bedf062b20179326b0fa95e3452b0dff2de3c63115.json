{"ast":null,"code":"var _jsxFileName = \"/Users/kalyankumarkonduru/Desktop/Portfolio/my-portfolio/src/components/ThemeToggle.js\",\n  _s = $RefreshSig$();\n// src/components/ThemeToggle.js\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../context/ThemeContext';\n//import LightModeIcon from '@mui/icons-material/LightMode';\n//import DarkModeIcon from '@mui/icons-material/DarkMode';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleWrapper = styled(motion.div)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n  border-radius: 50%;\n  background-color: ${props => props.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  \n  &:hover {\n    transform: rotate(15deg);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n    background-color: ${props => props.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n  }\n`;\n_c = ToggleWrapper;\nconst IconWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props => props.isDarkMode ? '#FFD700' : '#FFA500'};\n  font-size: 24px;\n`;\n_c2 = IconWrapper;\nconst ThemeToggle = () => {\n  _s();\n  const {\n    isDarkMode,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const toggleVariants = {\n    hover: {\n      scale: 1.1,\n      transition: {\n        duration: 0.3,\n        yoyo: Infinity\n      }\n    },\n    tap: {\n      scale: 0.9\n    }\n  };\n  const iconVariants = {\n    rotate: {\n      rotate: isDarkMode ? [0, 360] : [0, -360],\n      transition: {\n        duration: 0.7,\n        ease: \"easeInOut\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleWrapper, {\n    isDarkMode: isDarkMode,\n    onClick: toggleTheme,\n    variants: toggleVariants,\n    whileHover: \"hover\",\n    whileTap: \"tap\",\n    animate: \"rotate\",\n    children: /*#__PURE__*/_jsxDEV(IconWrapper, {\n      isDarkMode: isDarkMode,\n      variants: iconVariants,\n      initial: false,\n      animate: \"rotate\",\n      children: isDarkMode ? /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"8RQmTqHiRyiW0GZD9LCenb4s7gw=\");\n_c3 = ThemeToggle;\nexport default ThemeToggle;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ToggleWrapper\");\n$RefreshReg$(_c2, \"IconWrapper\");\n$RefreshReg$(_c3, \"ThemeToggle\");","map":{"version":3,"names":["React","useContext","styled","ThemeContext","motion","jsxDEV","_jsxDEV","ToggleWrapper","div","props","isDarkMode","_c","IconWrapper","_c2","ThemeToggle","_s","toggleTheme","toggleVariants","hover","scale","transition","duration","yoyo","Infinity","tap","iconVariants","rotate","ease","onClick","variants","whileHover","whileTap","animate","children","initial","LightModeIcon","fileName","_jsxFileName","lineNumber","columnNumber","DarkModeIcon","_c3","$RefreshReg$"],"sources":["/Users/kalyankumarkonduru/Desktop/Portfolio/my-portfolio/src/components/ThemeToggle.js"],"sourcesContent":["// src/components/ThemeToggle.js\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../context/ThemeContext';\n//import LightModeIcon from '@mui/icons-material/LightMode';\n//import DarkModeIcon from '@mui/icons-material/DarkMode';\nimport { motion } from 'framer-motion';\n\nconst ToggleWrapper = styled(motion.div)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n  border-radius: 50%;\n  background-color: ${props => props.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  \n  &:hover {\n    transform: rotate(15deg);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n    background-color: ${props => props.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n  }\n`;\n\nconst IconWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props => props.isDarkMode ? '#FFD700' : '#FFA500'};\n  font-size: 24px;\n`;\n\nconst ThemeToggle = () => {\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n\n  const toggleVariants = {\n    hover: {\n      scale: 1.1,\n      transition: {\n        duration: 0.3,\n        yoyo: Infinity\n      }\n    },\n    tap: {\n      scale: 0.9\n    }\n  };\n\n  const iconVariants = {\n    rotate: {\n      rotate: isDarkMode ? [0, 360] : [0, -360],\n      transition: {\n        duration: 0.7,\n        ease: \"easeInOut\"\n      }\n    }\n  };\n\n  return (\n    <ToggleWrapper \n      isDarkMode={isDarkMode}\n      onClick={toggleTheme}\n      variants={toggleVariants}\n      whileHover=\"hover\"\n      whileTap=\"tap\"\n      animate=\"rotate\"\n    >\n      <IconWrapper\n        isDarkMode={isDarkMode}\n        variants={iconVariants}\n        initial={false}\n        animate=\"rotate\"\n      >\n        {isDarkMode ? <LightModeIcon /> : <DarkModeIcon />}\n      </IconWrapper>\n    </ToggleWrapper>\n  );\n};\n\nexport default ThemeToggle;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,YAAY,QAAQ,yBAAyB;AACtD;AACA;AACA,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGL,MAAM,CAACE,MAAM,CAACI,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,0BAA0B,GAAG,oBAAoB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,0BAA0B,GAAG,oBAAoB;AACrG;AACA,CAAC;AAACC,EAAA,GApBIJ,aAAa;AAsBnB,MAAMK,WAAW,GAAGV,MAAM,CAACE,MAAM,CAACI,GAAG,CAAC;AACtC;AACA;AACA;AACA,WAAWC,KAAK,IAAIA,KAAK,CAACC,UAAU,GAAG,SAAS,GAAG,SAAS;AAC5D;AACA,CAAC;AAACG,GAAA,GANID,WAAW;AAQjB,MAAME,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEL,UAAU;IAAEM;EAAY,CAAC,GAAGf,UAAU,CAACE,YAAY,CAAC;EAE5D,MAAMc,cAAc,GAAG;IACrBC,KAAK,EAAE;MACLC,KAAK,EAAE,GAAG;MACVC,UAAU,EAAE;QACVC,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAEC;MACR;IACF,CAAC;IACDC,GAAG,EAAE;MACHL,KAAK,EAAE;IACT;EACF,CAAC;EAED,MAAMM,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNA,MAAM,EAAEhB,UAAU,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;MACzCU,UAAU,EAAE;QACVC,QAAQ,EAAE,GAAG;QACbM,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,aAAa;IACZG,UAAU,EAAEA,UAAW;IACvBkB,OAAO,EAAEZ,WAAY;IACrBa,QAAQ,EAAEZ,cAAe;IACzBa,UAAU,EAAC,OAAO;IAClBC,QAAQ,EAAC,KAAK;IACdC,OAAO,EAAC,QAAQ;IAAAC,QAAA,eAEhB3B,OAAA,CAACM,WAAW;MACVF,UAAU,EAAEA,UAAW;MACvBmB,QAAQ,EAAEJ,YAAa;MACvBS,OAAO,EAAE,KAAM;MACfF,OAAO,EAAC,QAAQ;MAAAC,QAAA,EAEfvB,UAAU,gBAAGJ,OAAA,CAAC6B,aAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGjC,OAAA,CAACkC,YAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAACxB,EAAA,CA7CID,WAAW;AAAA2B,GAAA,GAAX3B,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}