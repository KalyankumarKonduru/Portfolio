{"ast":null,"code":"// src/components/ThemeToggle.js\nimport React,{useContext}from'react';import styled from'styled-components';import{ThemeContext}from'../context/ThemeContext';import LightModeIcon from'@mui/icons-material/LightMode';import DarkModeIcon from'@mui/icons-material/DarkMode';import{motion}from'framer-motion';import{jsx as _jsx}from\"react/jsx-runtime\";const ToggleWrapper=styled(motion.div)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n  border-radius: 50%;\n  background-color: ${props=>props.isDarkMode?'rgba(255, 255, 255, 0.1)':'rgba(0, 0, 0, 0.1)'};\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  \n  &:hover {\n    transform: rotate(15deg);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n    background-color: ${props=>props.isDarkMode?'rgba(255, 255, 255, 0.2)':'rgba(0, 0, 0, 0.2)'};\n  }\n`;const IconWrapper=styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props=>props.isDarkMode?'#FFD700':'#FFA500'};\n  font-size: 24px;\n`;const ThemeToggle=()=>{const{isDarkMode,toggleTheme}=useContext(ThemeContext);const toggleVariants={hover:{scale:1.1,transition:{duration:0.3,yoyo:Infinity}},tap:{scale:0.9}};const iconVariants={rotate:{rotate:isDarkMode?[0,360]:[0,-360],transition:{duration:0.7,ease:\"easeInOut\"}}};return/*#__PURE__*/_jsx(ToggleWrapper,{isDarkMode:isDarkMode,onClick:toggleTheme,variants:toggleVariants,whileHover:\"hover\",whileTap:\"tap\",animate:\"rotate\",children:/*#__PURE__*/_jsx(IconWrapper,{isDarkMode:isDarkMode,variants:iconVariants,initial:false,animate:\"rotate\",children:isDarkMode?/*#__PURE__*/_jsx(LightModeIcon,{}):/*#__PURE__*/_jsx(DarkModeIcon,{})})});};export default ThemeToggle;","map":{"version":3,"names":["React","useContext","styled","ThemeContext","LightModeIcon","DarkModeIcon","motion","jsx","_jsx","ToggleWrapper","div","props","isDarkMode","IconWrapper","ThemeToggle","toggleTheme","toggleVariants","hover","scale","transition","duration","yoyo","Infinity","tap","iconVariants","rotate","ease","onClick","variants","whileHover","whileTap","animate","children","initial"],"sources":["/Users/kalyankumarkonduru/Desktop/Portfolio/my-portfolio/src/components/ThemeToggle.js"],"sourcesContent":["// src/components/ThemeToggle.js\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../context/ThemeContext';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport { motion } from 'framer-motion';\n\nconst ToggleWrapper = styled(motion.div)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n  border-radius: 50%;\n  background-color: ${props => props.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  \n  &:hover {\n    transform: rotate(15deg);\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n    background-color: ${props => props.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n  }\n`;\n\nconst IconWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props => props.isDarkMode ? '#FFD700' : '#FFA500'};\n  font-size: 24px;\n`;\n\nconst ThemeToggle = () => {\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n\n  const toggleVariants = {\n    hover: {\n      scale: 1.1,\n      transition: {\n        duration: 0.3,\n        yoyo: Infinity\n      }\n    },\n    tap: {\n      scale: 0.9\n    }\n  };\n\n  const iconVariants = {\n    rotate: {\n      rotate: isDarkMode ? [0, 360] : [0, -360],\n      transition: {\n        duration: 0.7,\n        ease: \"easeInOut\"\n      }\n    }\n  };\n\n  return (\n    <ToggleWrapper \n      isDarkMode={isDarkMode}\n      onClick={toggleTheme}\n      variants={toggleVariants}\n      whileHover=\"hover\"\n      whileTap=\"tap\"\n      animate=\"rotate\"\n    >\n      <IconWrapper\n        isDarkMode={isDarkMode}\n        variants={iconVariants}\n        initial={false}\n        animate=\"rotate\"\n      >\n        {isDarkMode ? <LightModeIcon /> : <DarkModeIcon />}\n      </IconWrapper>\n    </ToggleWrapper>\n  );\n};\n\nexport default ThemeToggle;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,YAAY,KAAQ,yBAAyB,CACtD,MAAO,CAAAC,aAAa,KAAM,+BAA+B,CACzD,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,OAASC,MAAM,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,aAAa,CAAGP,MAAM,CAACI,MAAM,CAACI,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBC,KAAK,EAAIA,KAAK,CAACC,UAAU,CAAG,0BAA0B,CAAG,oBAAoB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,EAAIA,KAAK,CAACC,UAAU,CAAG,0BAA0B,CAAG,oBAAoB;AACrG;AACA,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGX,MAAM,CAACI,MAAM,CAACI,GAAG,CAAC;AACtC;AACA;AACA;AACA,WAAWC,KAAK,EAAIA,KAAK,CAACC,UAAU,CAAG,SAAS,CAAG,SAAS;AAC5D;AACA,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEF,UAAU,CAAEG,WAAY,CAAC,CAAGd,UAAU,CAACE,YAAY,CAAC,CAE5D,KAAM,CAAAa,cAAc,CAAG,CACrBC,KAAK,CAAE,CACLC,KAAK,CAAE,GAAG,CACVC,UAAU,CAAE,CACVC,QAAQ,CAAE,GAAG,CACbC,IAAI,CAAEC,QACR,CACF,CAAC,CACDC,GAAG,CAAE,CACHL,KAAK,CAAE,GACT,CACF,CAAC,CAED,KAAM,CAAAM,YAAY,CAAG,CACnBC,MAAM,CAAE,CACNA,MAAM,CAAEb,UAAU,CAAG,CAAC,CAAC,CAAE,GAAG,CAAC,CAAG,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,CACzCO,UAAU,CAAE,CACVC,QAAQ,CAAE,GAAG,CACbM,IAAI,CAAE,WACR,CACF,CACF,CAAC,CAED,mBACElB,IAAA,CAACC,aAAa,EACZG,UAAU,CAAEA,UAAW,CACvBe,OAAO,CAAEZ,WAAY,CACrBa,QAAQ,CAAEZ,cAAe,CACzBa,UAAU,CAAC,OAAO,CAClBC,QAAQ,CAAC,KAAK,CACdC,OAAO,CAAC,QAAQ,CAAAC,QAAA,cAEhBxB,IAAA,CAACK,WAAW,EACVD,UAAU,CAAEA,UAAW,CACvBgB,QAAQ,CAAEJ,YAAa,CACvBS,OAAO,CAAE,KAAM,CACfF,OAAO,CAAC,QAAQ,CAAAC,QAAA,CAEfpB,UAAU,cAAGJ,IAAA,CAACJ,aAAa,GAAE,CAAC,cAAGI,IAAA,CAACH,YAAY,GAAE,CAAC,CACvC,CAAC,CACD,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAS,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}