{"ast":null,"code":"// src/context/ThemeContext.js\nimport React,{createContext,useState,useEffect}from'react';// Create the theme context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;// Check if dark mode preference is stored in localStorage\nconst storedTheme=localStorage.getItem('theme');const prefersDarkMode=window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches;// Initialize state based on stored preference or system preference\nconst[isDarkMode,setIsDarkMode]=useState(storedTheme?storedTheme==='dark':prefersDarkMode);// Theme colors for light and dark modes\nconst theme={isDarkMode,// Dark mode colors\ndark:{background:'#0a192f',secondaryBg:'#112240',text:'#ccd6f6',secondaryText:'#8892b0',accent:'#ed6d0b',highlight:'#64ffda',cardBg:'#112240',navBackground:'rgba(10, 25, 47, 0.85)'},// Light mode colors\nlight:{background:'#f8f8f8',secondaryBg:'#ffffff',text:'#333333',secondaryText:'#555555',accent:'#ed6d0b',highlight:'#2a9d8f',cardBg:'#ffffff',navBackground:'rgba(248, 248, 248, 0.85)'},// Current colors based on mode\ncolors:{},// Toggle function\ntoggleTheme:()=>{setIsDarkMode(!isDarkMode);}};// Update colors object based on current mode\ntheme.colors=isDarkMode?theme.dark:theme.light;// Update localStorage and apply body class when theme changes\nuseEffect(()=>{localStorage.setItem('theme',isDarkMode?'dark':'light');document.body.className=isDarkMode?'dark-theme':'light-theme';// Apply background color to body for smooth transitions\ndocument.body.style.backgroundColor=theme.colors.background;document.body.style.color=theme.colors.text;// Add transition for smooth color changes\ndocument.body.style.transition='background-color 0.5s ease, color 0.5s ease';},[isDarkMode,theme.colors.background,theme.colors.text]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:theme,children:children});};export default ThemeProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","storedTheme","localStorage","getItem","prefersDarkMode","window","matchMedia","matches","isDarkMode","setIsDarkMode","theme","dark","background","secondaryBg","text","secondaryText","accent","highlight","cardBg","navBackground","light","colors","toggleTheme","setItem","document","body","className","style","backgroundColor","color","transition","Provider","value"],"sources":["/Users/kalyankumarkonduru/Desktop/Portfolio/my-portfolio/src/context/ThemeContext.js"],"sourcesContent":["// src/context/ThemeContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the theme context\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  // Check if dark mode preference is stored in localStorage\n  const storedTheme = localStorage.getItem('theme');\n  const prefersDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  \n  // Initialize state based on stored preference or system preference\n  const [isDarkMode, setIsDarkMode] = useState(\n    storedTheme ? storedTheme === 'dark' : prefersDarkMode\n  );\n\n  // Theme colors for light and dark modes\n  const theme = {\n    isDarkMode,\n    // Dark mode colors\n    dark: {\n      background: '#0a192f',\n      secondaryBg: '#112240',\n      text: '#ccd6f6',\n      secondaryText: '#8892b0',\n      accent: '#ed6d0b',\n      highlight: '#64ffda',\n      cardBg: '#112240',\n      navBackground: 'rgba(10, 25, 47, 0.85)',\n    },\n    // Light mode colors\n    light: {\n      background: '#f8f8f8',\n      secondaryBg: '#ffffff',\n      text: '#333333',\n      secondaryText: '#555555',\n      accent: '#ed6d0b',\n      highlight: '#2a9d8f',\n      cardBg: '#ffffff',\n      navBackground: 'rgba(248, 248, 248, 0.85)',\n    },\n    // Current colors based on mode\n    colors: {},\n    // Toggle function\n    toggleTheme: () => {\n      setIsDarkMode(!isDarkMode);\n    }\n  };\n\n  // Update colors object based on current mode\n  theme.colors = isDarkMode ? theme.dark : theme.light;\n\n  // Update localStorage and apply body class when theme changes\n  useEffect(() => {\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    document.body.className = isDarkMode ? 'dark-theme' : 'light-theme';\n    \n    // Apply background color to body for smooth transitions\n    document.body.style.backgroundColor = theme.colors.background;\n    document.body.style.color = theme.colors.text;\n    \n    // Add transition for smooth color changes\n    document.body.style.transition = 'background-color 0.5s ease, color 0.5s ease';\n  }, [isDarkMode, theme.colors.background, theme.colors.text]);\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAEjE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAE3C,MAAO,MAAM,CAAAM,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC;AACA,KAAM,CAAAE,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,KAAM,CAAAC,eAAe,CAAGC,MAAM,CAACC,UAAU,EAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAEtG;AACA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAC1CQ,WAAW,CAAGA,WAAW,GAAK,MAAM,CAAGG,eACzC,CAAC,CAED;AACA,KAAM,CAAAM,KAAK,CAAG,CACZF,UAAU,CACV;AACAG,IAAI,CAAE,CACJC,UAAU,CAAE,SAAS,CACrBC,WAAW,CAAE,SAAS,CACtBC,IAAI,CAAE,SAAS,CACfC,aAAa,CAAE,SAAS,CACxBC,MAAM,CAAE,SAAS,CACjBC,SAAS,CAAE,SAAS,CACpBC,MAAM,CAAE,SAAS,CACjBC,aAAa,CAAE,wBACjB,CAAC,CACD;AACAC,KAAK,CAAE,CACLR,UAAU,CAAE,SAAS,CACrBC,WAAW,CAAE,SAAS,CACtBC,IAAI,CAAE,SAAS,CACfC,aAAa,CAAE,SAAS,CACxBC,MAAM,CAAE,SAAS,CACjBC,SAAS,CAAE,SAAS,CACpBC,MAAM,CAAE,SAAS,CACjBC,aAAa,CAAE,2BACjB,CAAC,CACD;AACAE,MAAM,CAAE,CAAC,CAAC,CACV;AACAC,WAAW,CAAEA,CAAA,GAAM,CACjBb,aAAa,CAAC,CAACD,UAAU,CAAC,CAC5B,CACF,CAAC,CAED;AACAE,KAAK,CAACW,MAAM,CAAGb,UAAU,CAAGE,KAAK,CAACC,IAAI,CAAGD,KAAK,CAACU,KAAK,CAEpD;AACA1B,SAAS,CAAC,IAAM,CACdQ,YAAY,CAACqB,OAAO,CAAC,OAAO,CAAEf,UAAU,CAAG,MAAM,CAAG,OAAO,CAAC,CAC5DgB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAGlB,UAAU,CAAG,YAAY,CAAG,aAAa,CAEnE;AACAgB,QAAQ,CAACC,IAAI,CAACE,KAAK,CAACC,eAAe,CAAGlB,KAAK,CAACW,MAAM,CAACT,UAAU,CAC7DY,QAAQ,CAACC,IAAI,CAACE,KAAK,CAACE,KAAK,CAAGnB,KAAK,CAACW,MAAM,CAACP,IAAI,CAE7C;AACAU,QAAQ,CAACC,IAAI,CAACE,KAAK,CAACG,UAAU,CAAG,6CAA6C,CAChF,CAAC,CAAE,CAACtB,UAAU,CAAEE,KAAK,CAACW,MAAM,CAACT,UAAU,CAAEF,KAAK,CAACW,MAAM,CAACP,IAAI,CAAC,CAAC,CAE5D,mBACElB,IAAA,CAACC,YAAY,CAACkC,QAAQ,EAACC,KAAK,CAAEtB,KAAM,CAAAV,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,cAAe,CAAAF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}