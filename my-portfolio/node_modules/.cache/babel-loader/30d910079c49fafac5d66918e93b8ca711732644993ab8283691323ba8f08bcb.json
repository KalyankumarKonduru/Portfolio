{"ast":null,"code":"var _jsxFileName = \"/Users/kalyankumarkonduru/Desktop/Portfolio/my-portfolio/src/components/Projects.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useInView } from 'react-intersection-observer';\nimport styled from 'styled-components';\nimport { Typography, Container, Grid, Box } from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSection = styled.section`\n  padding: 100px 0;\n  background-color: white;\n`;\n_c = StyledSection;\nconst ProjectCard = styled(animated.div)`\n  background-color: #112240;\n  transform: translateX(5px);\n  border-radius: 4px;\n  padding: 2rem 1.75rem;\n  height: 100%;\n  transition: transform 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n_c2 = ProjectCard;\nconst ProjectTitle = styled(Typography)`\n  color: #ccd6f6;\n  font-size: 22px;\n  font-weight: 600;\n  margin-bottom: 1rem;\n\n  &:hover {\n    color: #64ffda;\n  }\n`;\n_c3 = ProjectTitle;\nconst ProjectDescription = styled(Typography)`\n  color: #8892b0;\n  font-size: 16px;\n  margin-bottom: 1rem;\n`;\n_c4 = ProjectDescription;\nconst TechList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n  margin: 20px 0;\n  list-style: none;\n`;\n_c5 = TechList;\nconst IconButton = styled.a`\n  color: #ccd6f6;\n  padding: 10px;\n  min-width: auto;\n\n  &:hover {\n    color: #64ffda;\n  }\n\n  svg {\n    font-size: 20px;\n  }\n`;\n_c6 = IconButton;\nconst SectionTitle = styled(Typography)`\n  color: #ed6d0b;\n  font-size: clamp(26px, 5vw, 32px);\n  font-weight: 600;\n  margin-bottom: 40px;\n`;\n_c7 = SectionTitle;\nconst TerminalCard = styled(animated.div)`\n  background-color: #ffffff;\n  color: #000000;\n  border-radius: 4px;\n  /* Increased the padding to give more room for lines to stay on one row */\n  padding: 7rem 2.75rem;\n  height: 100%;\n  font-family: monospace;\n  font-size: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n_c8 = TerminalCard;\nconst consoleLines = ['>> Accessing server', '>> Access Granted', '>> fetch --projects status', 'STATUS: Development in progress', 'CURRENT: Building awesome projects', 'ETA: Coming soon!'];\n\n// Updated \"ProjectThree\" with line-by-line typing and no duplication\nfunction ProjectThree({\n  style\n}) {\n  _s();\n  const [displayedLines, setDisplayedLines] = React.useState([]); // completed lines\n  const [currentLineIndex, setCurrentLineIndex] = React.useState(0);\n  const [currentTypedText, setCurrentTypedText] = React.useState('');\n  const [blink, setBlink] = React.useState(true);\n\n  // Blinking cursor effect\n  React.useEffect(() => {\n    const blinkInterval = setInterval(() => {\n      setBlink(prev => !prev);\n    }, 500);\n    return () => clearInterval(blinkInterval);\n  }, []);\n\n  // Typewriter logic: type each line, then move on to the next\n  React.useEffect(() => {\n    // If we've shown all lines, stop\n    if (currentLineIndex >= consoleLines.length) return;\n    const currentLine = consoleLines[currentLineIndex];\n    const typingSpeed = 70; // ms per character\n    const pauseAfterLine = 800; // ms to pause after finishing a line\n\n    if (currentTypedText.length < currentLine.length) {\n      // Type forward until the line is complete\n      const timeout = setTimeout(() => {\n        setCurrentTypedText(currentLine.slice(0, currentTypedText.length + 1));\n      }, typingSpeed);\n      return () => clearTimeout(timeout);\n    } else {\n      // Once line is fully typed, add it to displayedLines, reset typed text, and go to next line\n      const timeout = setTimeout(() => {\n        setDisplayedLines(prev => [...prev, currentLine]);\n        setCurrentTypedText('');\n        setCurrentLineIndex(prev => prev + 1);\n      }, pauseAfterLine);\n      return () => clearTimeout(timeout);\n    }\n  }, [currentTypedText, currentLineIndex]);\n  return /*#__PURE__*/_jsxDEV(TerminalCard, {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), displayedLines.map((line, idx) => {\n      // If it's the last displayed line and all lines have been typed, keep the blinking cursor there\n      const isLastLine = idx === displayedLines.length - 1;\n      const showFinalCursor = isLastLine && displayedLines.length === consoleLines.length && blink;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [line, showFinalCursor && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: '5px'\n          },\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this);\n    }), currentLineIndex < consoleLines.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentTypedText, /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          visibility: blink ? 'visible' : 'hidden'\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n// Example Projects\n_s(ProjectThree, \"PlXpfl/emWTfaZto2efKp8rx/Q0=\");\n_c9 = ProjectThree;\nconst projects = [{\n  title: 'Orama',\n  description: 'ORAMA is an AI-powered object detection and risk assessment system designed for low-visibility driving conditions like fog and rain, leveraging YOLOv8 and adaptive preprocessing to enhance safety. It delivers real-time visual alerts and collision risk analysis, targeting future SaaS deployment for autonomous vehicles.',\n  tech: ['Python', 'Tensorflow', 'Jupyter', 'Yolov8', 'numpy'],\n  github: 'https://github.com/KalyankumarKonduru/Orama.git',\n  external: 'https://github.com/KalyankumarKonduru/Orama.git'\n}, {\n  title: 'Twarita',\n  description: 'TWARITA is an AI-powered vehicle safety system that combines object detection with real-time collision risk assessment and adaptive decision-making, using sensor data and advanced AI models to predict threats and trigger smart alerts or responses like automatic braking. Designed for scalability and tested in diverse driving scenarios, it aims to evolve into a SaaS platform for manufacturers with multi-sensor integration and global deployment.',\n  tech: ['Python', 'Yolov8', 'TensorFlow', 'Ultralytics', 'Matplotlib'],\n  github: 'https://github.com/KalyankumarKonduru/twarita.git',\n  external: 'https://github.com/KalyankumarKonduru/twarita.git'\n}, {\n  title: 'ApparelAI',\n  description: 'A machine learning model that synthesizes realistic clothing images using Conditional GAN, targeting enhancements in fashion marketing with customizable backgrounds. It leverages Style GAN and cGANs, integrating datasets like Deep Fashion, Fashion-MNIST, and Places365 for high-realism in apparel-to-background synthesis.',\n  tech: ['Conditional GAN', 'StyleGAN', 'Python', 'Tensorflow', 'Jupyter'],\n  github: 'https://github.com/KalyankumarKonduru/ApparelAI.git',\n  external: 'https://github.com/KalyankumarKonduru/ApparelAI.git'\n}, {\n  title: 'Sentoro',\n  description: 'A full stack application that connects users with domain experts through surveys. Features include engaging user interfaces that enhance data accuracy and comprehensive testing protocols documented in Jira to accelerate issue resolution.',\n  tech: ['Python', 'NoSQL', 'HTML', 'CSS', 'Express'],\n  github: 'https://github.com/KalyankumarKonduru/Sentoro.git',\n  external: 'https://github.com/KalyankumarKonduru/Sentoro.git'\n}, {\n  title: 'Alivio',\n  description: 'A full stack application that streamlines event management by offering scalable event planning and booking solutions. Features include secure user authentication with role-based access control and a responsive, cross-platform design.',\n  tech: ['React', 'Node.js', 'Express', 'MongoDB'],\n  github: 'https://github.com/KalyankumarKonduru/Alivio.git',\n  external: 'https://github.com/KalyankumarKonduru/Alivio.git'\n}];\nfunction Projects() {\n  _s2();\n  const {\n    ref,\n    inView\n  } = useInView({\n    threshold: 0.1,\n    triggerOnce: true\n  });\n\n  // Animate the normal project cards\n  const containerVariants = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? 'translateY(0)' : 'translateY(20px)',\n    config: {\n      duration: 500\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(StyledSection, {\n    ref: ref,\n    id: \"work\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 6,\n        children: /*#__PURE__*/_jsxDEV(SectionTitle, {\n          variant: \"h2\",\n          children: \"My Repository\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 7,\n        children: [projects.map((project, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n            style: containerVariants,\n            children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {\n              variant: \"h5\",\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProjectDescription, {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TechList, {\n              children: project.tech.map((tech, techIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: tech\n              }, techIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              href: project.github,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              href: project.external,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(OpenInNewIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(ProjectThree, {\n            style: containerVariants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s2(Projects, \"iRC6Dx9mBYLWbkdBxaIcLGPI0MI=\", false, function () {\n  return [useInView, useSpring];\n});\n_c10 = Projects;\nexport default Projects;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"StyledSection\");\n$RefreshReg$(_c2, \"ProjectCard\");\n$RefreshReg$(_c3, \"ProjectTitle\");\n$RefreshReg$(_c4, \"ProjectDescription\");\n$RefreshReg$(_c5, \"TechList\");\n$RefreshReg$(_c6, \"IconButton\");\n$RefreshReg$(_c7, \"SectionTitle\");\n$RefreshReg$(_c8, \"TerminalCard\");\n$RefreshReg$(_c9, \"ProjectThree\");\n$RefreshReg$(_c10, \"Projects\");","map":{"version":3,"names":["React","useSpring","animated","useInView","styled","Typography","Container","Grid","Box","GitHubIcon","OpenInNewIcon","jsxDEV","_jsxDEV","StyledSection","section","_c","ProjectCard","div","_c2","ProjectTitle","_c3","ProjectDescription","_c4","TechList","ul","_c5","IconButton","a","_c6","SectionTitle","_c7","TerminalCard","_c8","consoleLines","ProjectThree","style","_s","displayedLines","setDisplayedLines","useState","currentLineIndex","setCurrentLineIndex","currentTypedText","setCurrentTypedText","blink","setBlink","useEffect","blinkInterval","setInterval","prev","clearInterval","length","currentLine","typingSpeed","pauseAfterLine","timeout","setTimeout","slice","clearTimeout","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","line","idx","isLastLine","showFinalCursor","marginLeft","visibility","_c9","projects","title","description","tech","github","external","Projects","_s2","ref","inView","threshold","triggerOnce","containerVariants","opacity","transform","config","duration","id","mb","variant","container","spacing","project","index","item","xs","md","lg","techIndex","href","target","rel","_c10","$RefreshReg$"],"sources":["/Users/kalyankumarkonduru/Desktop/Portfolio/my-portfolio/src/components/Projects.js"],"sourcesContent":["import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useInView } from 'react-intersection-observer';\nimport styled from 'styled-components';\nimport { Typography, Container, Grid, Box } from '@mui/material';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nconst StyledSection = styled.section`\n  padding: 100px 0;\n  background-color: white;\n`;\n\nconst ProjectCard = styled(animated.div)`\n  background-color: #112240;\n  transform: translateX(5px);\n  border-radius: 4px;\n  padding: 2rem 1.75rem;\n  height: 100%;\n  transition: transform 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n\nconst ProjectTitle = styled(Typography)`\n  color: #ccd6f6;\n  font-size: 22px;\n  font-weight: 600;\n  margin-bottom: 1rem;\n\n  &:hover {\n    color: #64ffda;\n  }\n`;\n\nconst ProjectDescription = styled(Typography)`\n  color: #8892b0;\n  font-size: 16px;\n  margin-bottom: 1rem;\n`;\n\nconst TechList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n  margin: 20px 0;\n  list-style: none;\n`;\n\nconst IconButton = styled.a`\n  color: #ccd6f6;\n  padding: 10px;\n  min-width: auto;\n\n  &:hover {\n    color: #64ffda;\n  }\n\n  svg {\n    font-size: 20px;\n  }\n`;\n\nconst SectionTitle = styled(Typography)`\n  color: #ed6d0b;\n  font-size: clamp(26px, 5vw, 32px);\n  font-weight: 600;\n  margin-bottom: 40px;\n`;\n\nconst TerminalCard = styled(animated.div)`\n  background-color: #ffffff;\n  color: #000000;\n  border-radius: 4px;\n  /* Increased the padding to give more room for lines to stay on one row */\n  padding: 7rem 2.75rem;\n  height: 100%;\n  font-family: monospace;\n  font-size: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nconst consoleLines = [\n  '>> Accessing server',\n  '>> Access Granted',\n  '>> fetch --projects status',\n  'STATUS: Development in progress',\n  'CURRENT: Building awesome projects',\n  'ETA: Coming soon!',\n];\n\n// Updated \"ProjectThree\" with line-by-line typing and no duplication\nfunction ProjectThree({ style }) {\n  const [displayedLines, setDisplayedLines] = React.useState([]); // completed lines\n  const [currentLineIndex, setCurrentLineIndex] = React.useState(0);\n  const [currentTypedText, setCurrentTypedText] = React.useState('');\n  const [blink, setBlink] = React.useState(true);\n\n  // Blinking cursor effect\n  React.useEffect(() => {\n    const blinkInterval = setInterval(() => {\n      setBlink((prev) => !prev);\n    }, 500);\n    return () => clearInterval(blinkInterval);\n  }, []);\n\n  // Typewriter logic: type each line, then move on to the next\n  React.useEffect(() => {\n    // If we've shown all lines, stop\n    if (currentLineIndex >= consoleLines.length) return;\n\n    const currentLine = consoleLines[currentLineIndex];\n    const typingSpeed = 70; // ms per character\n    const pauseAfterLine = 800; // ms to pause after finishing a line\n\n    if (currentTypedText.length < currentLine.length) {\n      // Type forward until the line is complete\n      const timeout = setTimeout(() => {\n        setCurrentTypedText(\n          currentLine.slice(0, currentTypedText.length + 1)\n        );\n      }, typingSpeed);\n      return () => clearTimeout(timeout);\n    } else {\n      // Once line is fully typed, add it to displayedLines, reset typed text, and go to next line\n      const timeout = setTimeout(() => {\n        setDisplayedLines((prev) => [...prev, currentLine]);\n        setCurrentTypedText('');\n        setCurrentLineIndex((prev) => prev + 1);\n      }, pauseAfterLine);\n      return () => clearTimeout(timeout);\n    }\n  }, [currentTypedText, currentLineIndex]);\n\n  return (\n    <TerminalCard style={style}>\n      {/* \"LOADING\" with its own blinking cursor */}\n      <div style={{ marginBottom: '1rem' }}>\n        LOADING\n      </div>\n\n      {/* Display lines that have finished typing */}\n      {displayedLines.map((line, idx) => {\n        // If it's the last displayed line and all lines have been typed, keep the blinking cursor there\n        const isLastLine = idx === displayedLines.length - 1;\n        const showFinalCursor =\n          isLastLine && displayedLines.length === consoleLines.length && blink;\n        return (\n          <div key={idx}>\n            {line}\n            {showFinalCursor && <span style={{ marginLeft: '5px' }}>|</span>}\n          </div>\n        );\n      })}\n\n      {/* If we're still typing lines, show the partially typed line + cursor */}\n      {currentLineIndex < consoleLines.length && (\n        <div>\n          {currentTypedText}\n          <span style={{ visibility: blink ? 'visible' : 'hidden' }}>|</span>\n        </div>\n      )}\n    </TerminalCard>\n  );\n}\n\n// Example Projects\nconst projects = [\n  {\n    title: 'Orama',\n    description:\n      'ORAMA is an AI-powered object detection and risk assessment system designed for low-visibility driving conditions like fog and rain, leveraging YOLOv8 and adaptive preprocessing to enhance safety. It delivers real-time visual alerts and collision risk analysis, targeting future SaaS deployment for autonomous vehicles.',\n    tech: ['Python', 'Tensorflow', 'Jupyter', 'Yolov8', 'numpy'],\n    github: 'https://github.com/KalyankumarKonduru/Orama.git',\n    external: 'https://github.com/KalyankumarKonduru/Orama.git',\n  },\n  {\n    title: 'Twarita',\n    description:\n      'TWARITA is an AI-powered vehicle safety system that combines object detection with real-time collision risk assessment and adaptive decision-making, using sensor data and advanced AI models to predict threats and trigger smart alerts or responses like automatic braking. Designed for scalability and tested in diverse driving scenarios, it aims to evolve into a SaaS platform for manufacturers with multi-sensor integration and global deployment.',\n    tech: ['Python', 'Yolov8', 'TensorFlow', 'Ultralytics', 'Matplotlib'],\n    github: 'https://github.com/KalyankumarKonduru/twarita.git',\n    external: 'https://github.com/KalyankumarKonduru/twarita.git',\n  },\n  {\n    title: 'ApparelAI',\n    description:\n      'A machine learning model that synthesizes realistic clothing images using Conditional GAN, targeting enhancements in fashion marketing with customizable backgrounds. It leverages Style GAN and cGANs, integrating datasets like Deep Fashion, Fashion-MNIST, and Places365 for high-realism in apparel-to-background synthesis.',\n    tech: ['Conditional GAN', 'StyleGAN', 'Python', 'Tensorflow', 'Jupyter'],\n    github: 'https://github.com/KalyankumarKonduru/ApparelAI.git',\n    external: 'https://github.com/KalyankumarKonduru/ApparelAI.git',\n  },\n  {\n    title: 'Sentoro',\n    description:\n      'A full stack application that connects users with domain experts through surveys. Features include engaging user interfaces that enhance data accuracy and comprehensive testing protocols documented in Jira to accelerate issue resolution.',\n    tech: ['Python', 'NoSQL', 'HTML', 'CSS', 'Express'],\n    github: 'https://github.com/KalyankumarKonduru/Sentoro.git',\n    external: 'https://github.com/KalyankumarKonduru/Sentoro.git',\n  },\n  {\n    title: 'Alivio',\n    description:\n      'A full stack application that streamlines event management by offering scalable event planning and booking solutions. Features include secure user authentication with role-based access control and a responsive, cross-platform design.',\n    tech: ['React', 'Node.js', 'Express', 'MongoDB'],\n    github: 'https://github.com/KalyankumarKonduru/Alivio.git',\n    external: 'https://github.com/KalyankumarKonduru/Alivio.git',\n  },\n];\n\nfunction Projects() {\n  const { ref, inView } = useInView({\n    threshold: 0.1,\n    triggerOnce: true,\n  });\n\n  // Animate the normal project cards\n  const containerVariants = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? 'translateY(0)' : 'translateY(20px)',\n    config: { duration: 500 },\n  });\n\n  return (\n    <StyledSection ref={ref} id=\"work\">\n      <Container>\n        <Box mb={6}>\n          <SectionTitle variant=\"h2\">My Repository</SectionTitle>\n        </Box>\n\n        <Grid container spacing={7}>\n          {/* Existing projects */}\n          {projects.map((project, index) => (\n            <Grid item xs={12} md={6} lg={4} key={index}>\n              <ProjectCard style={containerVariants}>\n                <ProjectTitle variant=\"h5\">{project.title}</ProjectTitle>\n                <ProjectDescription>{project.description}</ProjectDescription>\n                <TechList>\n                  {project.tech.map((tech, techIndex) => (\n                    <li key={techIndex}>{tech}</li>\n                  ))}\n                </TechList>\n                <IconButton\n                  href={project.github}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <GitHubIcon />\n                </IconButton>\n                <IconButton\n                  href={project.external}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <OpenInNewIcon />\n                </IconButton>\n              </ProjectCard>\n            </Grid>\n          ))}\n\n          {/* The new \"Project Three\" console typing effect */}\n          <Grid item xs={12} md={6} lg={4}>\n            <ProjectThree style={containerVariants} />\n          </Grid>\n        </Grid>\n      </Container>\n    </StyledSection>\n  );\n}\n\nexport default Projects;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAClD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AAChE,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGT,MAAM,CAACU,OAAO;AACpC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,aAAa;AAKnB,MAAMG,WAAW,GAAGZ,MAAM,CAACF,QAAQ,CAACe,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,WAAW;AAajB,MAAMG,YAAY,GAAGf,MAAM,CAACC,UAAU,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACe,GAAA,GATID,YAAY;AAWlB,MAAME,kBAAkB,GAAGjB,MAAM,CAACC,UAAU,CAAC;AAC7C;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GAJID,kBAAkB;AAMxB,MAAME,QAAQ,GAAGnB,MAAM,CAACoB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,QAAQ;AASd,MAAMG,UAAU,GAAGtB,MAAM,CAACuB,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAZIF,UAAU;AAchB,MAAMG,YAAY,GAAGzB,MAAM,CAACC,UAAU,CAAC;AACvC;AACA;AACA;AACA;AACA,CAAC;AAACyB,GAAA,GALID,YAAY;AAOlB,MAAME,YAAY,GAAG3B,MAAM,CAACF,QAAQ,CAACe,GAAG,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACe,GAAA,GAZID,YAAY;AAclB,MAAME,YAAY,GAAG,CACnB,qBAAqB,EACrB,mBAAmB,EACnB,4BAA4B,EAC5B,iCAAiC,EACjC,oCAAoC,EACpC,mBAAmB,CACpB;;AAED;AACA,SAASC,YAAYA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,KAAK,CAACuC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzC,KAAK,CAACuC,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3C,KAAK,CAACuC,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,KAAK,CAACuC,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAvC,KAAK,CAAC8C,SAAS,CAAC,MAAM;IACpB,MAAMC,aAAa,GAAGC,WAAW,CAAC,MAAM;MACtCH,QAAQ,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC;IAC3B,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMC,aAAa,CAACH,aAAa,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/C,KAAK,CAAC8C,SAAS,CAAC,MAAM;IACpB;IACA,IAAIN,gBAAgB,IAAIP,YAAY,CAACkB,MAAM,EAAE;IAE7C,MAAMC,WAAW,GAAGnB,YAAY,CAACO,gBAAgB,CAAC;IAClD,MAAMa,WAAW,GAAG,EAAE,CAAC,CAAC;IACxB,MAAMC,cAAc,GAAG,GAAG,CAAC,CAAC;;IAE5B,IAAIZ,gBAAgB,CAACS,MAAM,GAAGC,WAAW,CAACD,MAAM,EAAE;MAChD;MACA,MAAMI,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/Bb,mBAAmB,CACjBS,WAAW,CAACK,KAAK,CAAC,CAAC,EAAEf,gBAAgB,CAACS,MAAM,GAAG,CAAC,CAClD,CAAC;MACH,CAAC,EAAEE,WAAW,CAAC;MACf,OAAO,MAAMK,YAAY,CAACH,OAAO,CAAC;IACpC,CAAC,MAAM;MACL;MACA,MAAMA,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BlB,iBAAiB,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEG,WAAW,CAAC,CAAC;QACnDT,mBAAmB,CAAC,EAAE,CAAC;QACvBF,mBAAmB,CAAEQ,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MACzC,CAAC,EAAEK,cAAc,CAAC;MAClB,OAAO,MAAMI,YAAY,CAACH,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,CAACb,gBAAgB,EAAEF,gBAAgB,CAAC,CAAC;EAExC,oBACE5B,OAAA,CAACmB,YAAY;IAACI,KAAK,EAAEA,KAAM;IAAAwB,QAAA,gBAEzB/C,OAAA;MAAKuB,KAAK,EAAE;QAAEyB,YAAY,EAAE;MAAO,CAAE;MAAAD,QAAA,EAAC;IAEtC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAGL3B,cAAc,CAAC4B,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MACjC;MACA,MAAMC,UAAU,GAAGD,GAAG,KAAK9B,cAAc,CAACc,MAAM,GAAG,CAAC;MACpD,MAAMkB,eAAe,GACnBD,UAAU,IAAI/B,cAAc,CAACc,MAAM,KAAKlB,YAAY,CAACkB,MAAM,IAAIP,KAAK;MACtE,oBACEhC,OAAA;QAAA+C,QAAA,GACGO,IAAI,EACJG,eAAe,iBAAIzD,OAAA;UAAMuB,KAAK,EAAE;YAAEmC,UAAU,EAAE;UAAM,CAAE;UAAAX,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFxDG,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CAAC;IAEV,CAAC,CAAC,EAGDxB,gBAAgB,GAAGP,YAAY,CAACkB,MAAM,iBACrCvC,OAAA;MAAA+C,QAAA,GACGjB,gBAAgB,eACjB9B,OAAA;QAAMuB,KAAK,EAAE;UAAEoC,UAAU,EAAE3B,KAAK,GAAG,SAAS,GAAG;QAAS,CAAE;QAAAe,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEnB;;AAEA;AAAA5B,EAAA,CA1ESF,YAAY;AAAAsC,GAAA,GAAZtC,YAAY;AA2ErB,MAAMuC,QAAQ,GAAG,CACf;EACEC,KAAK,EAAE,OAAO;EACdC,WAAW,EACT,iUAAiU;EACnUC,IAAI,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC;EAC5DC,MAAM,EAAE,iDAAiD;EACzDC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEJ,KAAK,EAAE,SAAS;EAChBC,WAAW,EACT,gcAAgc;EAClcC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,CAAC;EACrEC,MAAM,EAAE,mDAAmD;EAC3DC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEJ,KAAK,EAAE,WAAW;EAClBC,WAAW,EACT,mUAAmU;EACrUC,IAAI,EAAE,CAAC,iBAAiB,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,CAAC;EACxEC,MAAM,EAAE,qDAAqD;EAC7DC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEJ,KAAK,EAAE,SAAS;EAChBC,WAAW,EACT,+OAA+O;EACjPC,IAAI,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC;EACnDC,MAAM,EAAE,mDAAmD;EAC3DC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEJ,KAAK,EAAE,QAAQ;EACfC,WAAW,EACT,2OAA2O;EAC7OC,IAAI,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAChDC,MAAM,EAAE,kDAAkD;EAC1DC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,GAAA;EAClB,MAAM;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAG/E,SAAS,CAAC;IAChCgF,SAAS,EAAE,GAAG;IACdC,WAAW,EAAE;EACf,CAAC,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAGpF,SAAS,CAAC;IAClCqF,OAAO,EAAEJ,MAAM,GAAG,CAAC,GAAG,CAAC;IACvBK,SAAS,EAAEL,MAAM,GAAG,eAAe,GAAG,kBAAkB;IACxDM,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAI;EAC1B,CAAC,CAAC;EAEF,oBACE7E,OAAA,CAACC,aAAa;IAACoE,GAAG,EAAEA,GAAI;IAACS,EAAE,EAAC,MAAM;IAAA/B,QAAA,eAChC/C,OAAA,CAACN,SAAS;MAAAqD,QAAA,gBACR/C,OAAA,CAACJ,GAAG;QAACmF,EAAE,EAAE,CAAE;QAAAhC,QAAA,eACT/C,OAAA,CAACiB,YAAY;UAAC+D,OAAO,EAAC,IAAI;UAAAjC,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAENpD,OAAA,CAACL,IAAI;QAACsF,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAnC,QAAA,GAExBc,QAAQ,CAACR,GAAG,CAAC,CAAC8B,OAAO,EAAEC,KAAK,kBAC3BpF,OAAA,CAACL,IAAI;UAAC0F,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAzC,QAAA,eAC9B/C,OAAA,CAACI,WAAW;YAACmB,KAAK,EAAEkD,iBAAkB;YAAA1B,QAAA,gBACpC/C,OAAA,CAACO,YAAY;cAACyE,OAAO,EAAC,IAAI;cAAAjC,QAAA,EAAEoC,OAAO,CAACrB;YAAK;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAe,CAAC,eACzDpD,OAAA,CAACS,kBAAkB;cAAAsC,QAAA,EAAEoC,OAAO,CAACpB;YAAW;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAqB,CAAC,eAC9DpD,OAAA,CAACW,QAAQ;cAAAoC,QAAA,EACNoC,OAAO,CAACnB,IAAI,CAACX,GAAG,CAAC,CAACW,IAAI,EAAEyB,SAAS,kBAChCzF,OAAA;gBAAA+C,QAAA,EAAqBiB;cAAI,GAAhByB,SAAS;gBAAAxC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAC/B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eACXpD,OAAA,CAACc,UAAU;cACT4E,IAAI,EAAEP,OAAO,CAAClB,MAAO;cACrB0B,MAAM,EAAC,QAAQ;cACfC,GAAG,EAAC,qBAAqB;cAAA7C,QAAA,eAEzB/C,OAAA,CAACH,UAAU;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACbpD,OAAA,CAACc,UAAU;cACT4E,IAAI,EAAEP,OAAO,CAACjB,QAAS;cACvByB,MAAM,EAAC,QAAQ;cACfC,GAAG,EAAC,qBAAqB;cAAA7C,QAAA,eAEzB/C,OAAA,CAACF,aAAa;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC,GAvBsBgC,KAAK;UAAAnC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBrC,CACP,CAAC,eAGFpD,OAAA,CAACL,IAAI;UAAC0F,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAzC,QAAA,eAC9B/C,OAAA,CAACsB,YAAY;YAACC,KAAK,EAAEkD;UAAkB;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB;AAACgB,GAAA,CA1DQD,QAAQ;EAAA,QACS5E,SAAS,EAMPF,SAAS;AAAA;AAAAwG,IAAA,GAP5B1B,QAAQ;AA4DjB,eAAeA,QAAQ;AAAC,IAAAhE,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAwC,GAAA,EAAAiC,IAAA;AAAAC,YAAA,CAAA3F,EAAA;AAAA2F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAAtF,GAAA;AAAAsF,YAAA,CAAApF,GAAA;AAAAoF,YAAA,CAAAjF,GAAA;AAAAiF,YAAA,CAAA9E,GAAA;AAAA8E,YAAA,CAAA5E,GAAA;AAAA4E,YAAA,CAAA1E,GAAA;AAAA0E,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}